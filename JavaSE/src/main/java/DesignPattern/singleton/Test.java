package DesignPattern.singleton;

/**
 * @Author maxin
 * @Date 2019-11-19 17:42
 * @ClassName Test 介绍：所谓的单例设计模式，就是采取一定的方法保证在整个的软件系统中，对某个类智能存在一个
 *                      对象实例。并且该类只提供一个取得其对象实例的方法（静态方法）
 * @Description 单例模式注意事项和细节说明
 *                  1.单例模式保证了系统内存中该类只存在一个对象，节省了系统资源，对于一些需要
 *                    频繁创建销毁的对象，使用单例模式可以提高系统性能
 *                  2.当想实例化一个单例类的时候，必须要记住使用相应的获取对象的方法，而不是使用new
 *                  3.单例模式使用的场景：需要频繁创建销毁的对象，创建对象耗时过多活耗费资源过多（即：重量级对象），
 *                      但又经常用到的对象，工具类对象，频繁访问数据库或文件的对象（比如 数据源，session工厂等）
        推荐使用：双重检查，枚举，饿汉式，静态内部类
 * @Version 1.0
 *
 **/
public class Test {
    private Runtime runtime = Runtime.getRuntime();//使用了饿汉式
}